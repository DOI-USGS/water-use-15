target_default: preprocess

packages:
  - vizlab
  - rgdal
  - dplyr
  - tibble

sources:
  - scripts/preprocess/fetch_url.R
  - scripts/preprocess/read_shp_zip.R
  - scripts/preprocess/process_dictionaries.R
  - scripts/preprocess/process_counties.R
  - scripts/preprocess/process_counties_to_states.R
  - scripts/preprocess/process_compute_centroids.R
  - scripts/preprocess/fetch_s3_object.R
  - scripts/preprocess/clean_county_boundaries.R
  - scripts/preprocess/save_state_fips.R
  - scripts/preprocess/execute_shell_script.R
  - scripts/preprocess/push_s3_object.R

targets:
  
  # --- fetch --- #
  
  # See https://www.census.gov/geo/maps-data/data/cbf/cbf_counties.html for details on this file.
  # this file includes counties for places we don't need:
  #   Northern Mariana Island (STATEFP=='69'), Guam (STATEFP=='66'), and American Samoa (STATEFP=='60')
  # and also the places we do want:
  #   Virgin Islands, Puerto Rico, and all 50 states
  # Note that because we're fetching here rather than vizlab, and with a simple function,
  #   there will be no automatic updates if the contents of the Census Bureau's file change.
  #   If they do (unlikely), you should delete your local copy of the file and build again.
  cache/pre_county_boundaries_census.zip:
    command: fetch_url(target_name, I('http://www2.census.gov/geo/tiger/GENZ2015/shp/cb_2015_us_county_500k.zip'))
  # ^ very similar command is still in viz.yaml. we can take it out of there once we're computing
  # county and state dictionaries in this preprocessing phase, but for now we need the same file both places.
  
  # --- fetch - old --- #
  
  # takes about 12 minutes
  cache/IPUMS_NHGIS_counties.zip:
    command: fetch_s3_object(target_name, I("IPUMS_NHGIS_counties.zip"), I("viz-water-use-15"))
  
  # --- process --- #
  
  county_boundaries_census_sp:
    command: read_shp_zip('cache/pre_county_boundaries_census.zip')
    
  cache/pre_county_dictionary.json:
    command: process_county_dictionary(target_name, county_boundaries_census_sp)
    
  cache/pre_state_dictionary.json:
    command: process_state_dictionary(target_name, county_boundaries_census_sp)
  
  cache/pre_county_boundaries_USA.json:
    command: process_counties(
      outfile=target_name, county_sp=county_boundaries_census_sp,
      county_dict_file='cache/pre_county_dictionary.json', script_file='scripts/preprocess/process_counties.sh')
    
  cache/pre_state_boundaries_USA.json:
    command: process_counties_to_states(
      outfile=target_name, county_topojson='cache/pre_county_boundaries_USA.json',
      state_dict_file='cache/pre_state_dictionary.json', script_file = 'scripts/preprocess/process_counties_to_states.js') 
      
  cache/pre_county_centroids_USA.json:
    command: process_compute_centroids(
      outfile=target_name, spdat=county_boundaries_census_sp,
      county_dict_file='cache/pre_county_dictionary.json')
  
  # --- process - old --- #    
  
  # takes about 45 minutes & about 5.5 GB of disk space for all FIPS
  cache/county_boundaries_geojson.zip:
    command: clean_county_boundaries(target_name, "cache/IPUMS_NHGIS_counties.zip")
  
  # takes about 30 seconds
  cache/state_fips.csv:
    command: save_state_fips(target_name, "cache/county_boundaries_geojson.zip", I("states.json"))
  
  # takes about 10 minutes & about 3 GB of disk space for all FIPS
  cache/county_boundaries_topojson.zip:
    command: execute_shell_script(target_name, "cache/county_boundaries_geojson.zip", 
                                  I("scripts/preprocess/topo_county_boundaries.sh"),
                                  "cache/state_fips.csv")
    
  # --- publish --- #
  
  s3_county_boundaries_json:
    command: push_s3_object(I("county_boundaries_USA.json"), "cache/pre_county_boundaries_USA.json", I("viz-water-use-15"))
                            
  s3_state_boundaries_json:
    command: push_s3_object(I("state_boundaries_USA.json"), "cache/pre_state_boundaries_USA.json", I("viz-water-use-15"))
  
  s3_county_dictionary_json:
    command: push_s3_object(I("county_dictionary.json"), "cache/pre_county_dictionary.json", I("viz-water-use-15"))
  
  s3_state_dictionary_json:
    command: push_s3_object(I("state_dictionary.json"), "cache/pre_state_dictionary.json", I("viz-water-use-15"))
    
  s3_county_centroids_json:
    command: push_s3_object(I("county_centroids_USA.json"), "cache/pre_county_centroids_USA.json", I("viz-water-use-15"))
  
  # --- publish - old --- #
  
  # takes about 12 minutes
  s3boundariesfile:
    command: push_s3_object(I("county_boundaries_topojson.zip"), 
                            "cache/county_boundaries_topojson.zip", 
                            I("viz-water-use-15"))
  
  # --- final --- #
  
  preprocess:
    depends:
      - s3_county_boundaries_json
      - s3_state_boundaries_json
      - s3_county_dictionary_json
      - s3_state_dictionary_json
      - s3_county_centroids_json
  
  # --- final - old --- #
  
  oldpreprocess:
    depends:
      - s3boundariesfile
