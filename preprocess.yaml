info:
  name: preprocessing framework
  description: >- this is the yaml that orchestrates the steps required for 
        preprocessing the county boundary and state/county fips data. This should
        not need to be executed by every contributor because the results are stored
        in the S3 bucket. Most should just worry about the viz.yaml.
  required-packages:
    vizlab:
      repo: github
      version: 0.3.0
      name: USGS-VIZLAB/vizlab
      ref: NA
    aws.s3:
      repo: CRAN
      version: 0.3.3
    dplyr:
      repo: CRAN
      version: 0.7.4
    jsonlite:
      repo: CRAN
      version: 1.5
    sf:
      repo: CRAN
      version: 0.6.0
parameters:
  - 
    id: s3bucket
    name: 'viz-water-use-15'
fetch:
  -
    id: county_boundaries_IPUMS
    location: cache/IPUMS_NHGIS_counties.zip
    reader: zip
    fetcher: s3_object
    scripts: [scripts/fetch/s3_object.R]
    depends:
      object_name: IPUMS_NHGIS_counties.zip
      bucket_name: s3bucket
process:
  -
    id: county_boundaries_geojson
    location: cache/county_boundaries_geojson.zip
    depends:
      county_boundaries_zip: county_boundaries_IPUMS
    reader: zip
    processor: county_boundaries
    scripts: [scripts/process/clean_county_boundaries.R]
  -
    # convert geojson to topojson and simplify
    id: county_boundaries_topojson
    location: cache/county_boundaries_topojson.zip
    depends:
      county_boundaries_zip: county_boundaries_geojson
      shell_script: scripts/process/topo_county_boundaries.sh
    reader: zip
    processor: execute_shell_script
    scripts: [scripts/process/execute_shell_script.R]
publish:
  -
    # push the processed topojson up to the s3 bucket to be used by viz.yaml
    id: county_boundaries_topojson_s3
    publisher: s3_object.R
    scripts: [scripts/publish/s3_object.R]
    depends:
      file_location: cache/county_boundaries_topojson.zip
      object_name: county_boundaries_topojson.zip
      bucket_name: s3bucket
    mimetype: application/zip
