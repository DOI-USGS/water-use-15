target_default: preprocess

packages:
  - vizlab
  - rgdal
  - dplyr
  - tibble
  - sbtools
  - maptools
  - geojsonio
  - lwgeom
  - sf

sources:
  - scripts/preprocess/fetch_url.R
  - scripts/preprocess/process_zip_to_shp.R
  - scripts/preprocess/process_dictionaries.R
  - scripts/preprocess/process_counties.R
  - scripts/preprocess/process_counties_to_states.R
  - scripts/preprocess/process_compute_centroids.R
  - scripts/preprocess/push_SB_object.R

targets:
  
  # --- fetch --- #
  
  # See https://www.census.gov/geo/maps-data/data/cbf/cbf_counties.html for details on this file.
  # this file includes counties for places we don't need:
  #   Northern Mariana Island (STATEFP=='69'), Guam (STATEFP=='66'), and American Samoa (STATEFP=='60')
  # and also the places we do want:
  #   Virgin Islands, Puerto Rico, and all 50 states
  # Note that because we're fetching here rather than vizlab, and with a simple function,
  #   there will be no automatic updates if the contents of the Census Bureau's file change.
  #   If they do (unlikely), you should delete your local copy of the file and build again.
  cache/pre_county_boundaries_census.zip:
    command: fetch_url(target_name, I('http://www2.census.gov/geo/tiger/GENZ2015/shp/cb_2015_us_county_500k.zip'))
  # ^ very similar command is still in viz.yaml. we can take it out of there once we're computing
  # county and state dictionaries in this preprocessing phase, but for now we need the same file both places.
  
  # --- process --- #
  
  county_boundaries_census_sp:
    command: read_shp_zip('cache/pre_county_boundaries_census.zip')
    
  county_boundaries_shifted_sp:
    command: scale_shifted_shps(county_boundaries_census_sp, STATEFP = I(c('72','78','02')), scale = I(c(3, 3, 1/2)))
    
  cache/pre_county_dictionary.json:
    command: process_county_dictionary(target_name, county_boundaries_shifted_sp)
    
  cache/pre_state_dictionary.json:
    command: process_state_dictionary(target_name, county_boundaries_shifted_sp)

# --- simplication of counties --- #

  # simplify closer to 1e-1 and quantize closer to 1e1 make smaller files
  cache/simpled_county_boundaries_USA.json:
    command: process_counties(
      outfile=target_name, county_sp=county_boundaries_shifted_sp,
      simplify=I(1e-6), quantize=I(1e6),
      county_dict_file='cache/pre_county_dictionary.json', script_file='scripts/preprocess/process_counties.sh')

  # simplify somewhere between USA and zoom top optimize for mobile
  cache/simpled_county_boundaries_mobile.json:
    command: process_counties(
      outfile=target_name, county_sp=county_boundaries_shifted_sp,
      simplify=I(5e-7), quantize=I(5e6),
      county_dict_file='cache/pre_county_dictionary.json', script_file='scripts/preprocess/process_counties.sh')

  # simplify closer to 1e-20 and quantize closer to 1e20 make higher resolution boundaries (bigger files)  
  cache/simpled_county_boundaries_zoom.json:
    command: process_counties(
      outfile=target_name, county_sp=county_boundaries_shifted_sp,
      simplify=I(1e-8), quantize=I(1e8),
      county_dict_file='cache/pre_county_dictionary.json', script_file='scripts/preprocess/process_counties.sh')

      
# --- shift back scales after simplication of counties --- #
  cache/pre_county_boundaries_USA.json:
    command: rescale_write_shps(
      target_name, "cache/simpled_county_boundaries_USA.json", STATEFP = I(c('72','78','02')), scale = I(c(1/3, 1/3, 2)), quantize=I(1e6))

  cache/pre_county_boundaries_mobile.json:
    command: rescale_write_shps(
      target_name, "cache/simpled_county_boundaries_mobile.json", STATEFP = I(c('72','78','02')), scale = I(c(1/3, 1/3, 2)), coerce_dropped = I(TRUE), quantize=I(1e7)) 

  cache/pre_county_boundaries_zoom.json:
    command: rescale_write_shps(
      target_name, "cache/simpled_county_boundaries_zoom.json", STATEFP = I(c('72','78','02')), scale = I(c(1/3, 1/3, 2)), coerce_dropped = I(TRUE), quantize=I(1e8)) 

# --- use topojson versions of counties to create state boundaries --- #

  cache/pre_state_boundaries_USA.json:
    depends: scripts/preprocess/custom_projection.js
    command: process_counties_to_states(
      outfile=target_name, objects=I('states'), quantize=I(1e6), zoom_dims=I(FALSE),
      county_topojson='target/data/county_boundaries_USA.json',
      state_dict_file='cache/pre_state_dictionary.json', script_file = 'scripts/preprocess/process_counties_to_states.js') 

  cache/pre_state_boundaries_mobile.json:
    depends: scripts/preprocess/custom_projection.js
    command: process_counties_to_states(
      outfile=target_name, objects=I('states'), quantize=I(5e6), zoom_dims=I(TRUE),
      county_topojson='target/data/county_boundaries_mobile.json',
      state_dict_file='cache/pre_state_dictionary.json', script_file = 'scripts/preprocess/process_counties_to_states.js')   

  cache/pre_state_boundaries_zoom.json:
    depends: scripts/preprocess/custom_projection.js
    command: process_counties_to_states(
      outfile=target_name, objects=I('states'), quantize=I(1e8), zoom_dims=I(TRUE),
      county_topojson='target/data/county_boundaries_zoom.json',
      state_dict_file='cache/pre_state_dictionary.json', script_file = 'scripts/preprocess/process_counties_to_states.js') 

# --- create county centroids from original sp object --- #

  cache/pre_county_centroids_USA.json:
    command: process_compute_centroids(
      outfile=target_name, spdat=county_boundaries_census_sp,
      county_dict_file='cache/pre_county_dictionary.json')
  
  # --- publish --- #
  
  SB_county_boundaries_USA_json:
    command: push_SB_object(I("5ab154b1e4b081f61ab26420"), "cache/pre_county_boundaries_USA.json", I("county_boundaries_USA.json"))

  SB_county_boundaries_mobile_json:
    command: push_SB_object(I("5ab154b1e4b081f61ab26420"), "cache/pre_county_boundaries_mobile.json", I("county_boundaries_mobile.json"))
    
  SB_county_boundaries_zoom_json:
    command: push_SB_object(I("5ab154b1e4b081f61ab26420"), "cache/pre_county_boundaries_zoom.json", I("county_boundaries_zoom.json"))

  SB_state_boundaries_USA_json:
    command: push_SB_object(I("5ab154b1e4b081f61ab26420"), "cache/pre_state_boundaries_USA.json", I("state_boundaries_USA.json"))
  
  SB_state_boundaries_mobile_json:
    command: push_SB_object(I("5ab154b1e4b081f61ab26420"), "cache/pre_state_boundaries_mobile.json", I("state_boundaries_mobile.json"))

  SB_state_boundaries_zoom_json:
    command: push_SB_object(I("5ab154b1e4b081f61ab26420"), "cache/pre_state_boundaries_zoom.json", I("state_boundaries_zoom.json"))

  SB_county_centroids_json:
    command: push_SB_object(I("5ab154b1e4b081f61ab26420"), "cache/pre_county_centroids_USA.json", I("county_centroids_USA.json"))
  
  # --- final --- #
  
  preprocess:
    depends:
      - SB_county_boundaries_USA_json
      - SB_county_boundaries_mobile_json
      - SB_county_boundaries_zoom_json
      - SB_state_boundaries_USA_json
      - SB_state_boundaries_mobile_json
      - SB_state_boundaries_zoom_json
      - SB_county_centroids_json
